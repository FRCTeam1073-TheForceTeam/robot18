package org.usfirst.frc1073.robot18.commands;

import org.usfirst.frc1073.robot18.Robot;
import org.usfirst.frc1073.robot18.RobotMap;

import com.ctre.phoenix.motorcontrol.ControlMode;
import com.ctre.phoenix.motorcontrol.FeedbackDevice;

import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

public class AdvancedDrive2 extends Command {
	
	 private double rots;
	 
	    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
	 
	    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
	    public AdvancedDrive2(double rots) {

	    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
	        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING


	        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
	    	this.rots = rots;
	        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	        requires(Robot.drivetrain);

	    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	    }

	    // Called just before this Command runs the first time
	    protected void initialize() {
	    	RobotMap.leftMotor1.configSelectedFeedbackSensor(FeedbackDevice.QuadEncoder, 0, 10);
	    	RobotMap.rightMotor1.configSelectedFeedbackSensor(FeedbackDevice.QuadEncoder, 0, 10);
	    }

	    // Called repeatedly when this Command is scheduled to run
	    protected void execute() {
	    	if((-RobotMap.leftMotor1.getSelectedSensorPosition(0) / 1440) >= rots*.75 ||
	    			(RobotMap.rightMotor1.getSelectedSensorPosition(0) / 1440) >= rots*.75)
	    	{
	    		Robot.drivetrain.difDrive.arcadeDrive(.4, 0);
	    	}
	    	else {
	    		Robot.drivetrain.difDrive.arcadeDrive(.8, 0);
	    	}
	    }

	    // Make this return true when this Command no longer needs to run execute()
	    protected boolean isFinished() {
	    	boolean fin = false;
	    	if((-RobotMap.leftMotor1.getSelectedSensorPosition(0) / 1440) == rots || 
	    			(RobotMap.rightMotor1.getSelectedSensorPosition(0) / 1440) == rots) {
	    		fin = true;
	    	}
	    	return fin;
	    }

	    // Called once after isFinished returns true
	    protected void end() {
	    	Robot.drivetrain.basicDrive(0, 0);
	    }

	    // Called when another command which requires one or more of the same
	    // subsystems is scheduled to run
	    protected void interrupted() {
	    	Robot.drivetrain.basicDrive(0, 0);
	    }
}
