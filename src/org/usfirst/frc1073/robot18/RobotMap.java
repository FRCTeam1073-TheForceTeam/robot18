// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc1073.robot18;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;
import edu.wpi.first.wpilibj.CounterBase.EncodingType;
import edu.wpi.first.wpilibj.ADXRS450_Gyro;
import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.PIDSourceType;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
<<<<<<< HEAD
    public static WPI_TalonSRX rightMotor1;
    public static WPI_TalonSRX rightMotor2;
    public static WPI_TalonSRX rightMotor3E;
    public static WPI_TalonSRX leftMotor1E;
    public static WPI_TalonSRX leftMotor2;
    public static WPI_TalonSRX leftMotor3;
    public static Encoder rightEnc;
    public static Encoder leftEnc;
=======
    public static WPI_TalonSRX driveTraindriveTrainRightMotor1;
    public static WPI_TalonSRX driveTraindriveTrainRightMotor2;
    public static WPI_TalonSRX driveTraindriveTrainRightMotor3E;
    public static WPI_TalonSRX driveTraindriveTrainLeftMotor1;
    public static WPI_TalonSRX driveTraindriveTrainLeftMotor2;
    public static WPI_TalonSRX driveTraindriveTrainLeftMotor3E;
    public static Encoder driveTraindriveTrainRightEnc;
    public static Encoder driveTraindriveTrainLeftEnc;
>>>>>>> c6e618dcf92f2be930c2f981793c959441e3f1e7

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static ADXRS450_Gyro headingGyro;
    
    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
<<<<<<< HEAD
    	
    // Motor init
    	// Right
        rightMotor1 = new WPI_TalonSRX(1);
        rightMotor2 = new WPI_TalonSRX(2);
        rightMotor3E = new WPI_TalonSRX(3);
        //Left
        leftMotor1E = new WPI_TalonSRX(4);
        leftMotor2 = new WPI_TalonSRX(5);
        leftMotor3 = new WPI_TalonSRX(6);
        
    // Encoder init
        // Right
        rightEnc = new Encoder(2, 3, false, EncodingType.k4X);
        rightEnc.setDistancePerPulse(1.0);
        rightEnc.setPIDSourceType(PIDSourceType.kRate);
        LiveWindow.addSensor("DriveTrain", "rightEnc", rightEnc);
        // Left
        leftEnc = new Encoder(0, 1, false, EncodingType.k4X);
        leftEnc.setDistancePerPulse(1.0);
        leftEnc.setPIDSourceType(PIDSourceType.kRate);
        LiveWindow.addSensor("DriveTrain", "leftEnc", leftEnc);
=======
        headingGyro = new ADXRS450_Gyro();
        LiveWindow.addSensor("DriveTrain", "headingGyro", headingGyro);
        
        driveTraindriveTrainRightMotor1 = new WPI_TalonSRX(1);
        
        
        driveTraindriveTrainRightMotor2 = new WPI_TalonSRX(2);
        
        
        driveTraindriveTrainRightMotor3E = new WPI_TalonSRX(3);
        
        
        driveTraindriveTrainLeftMotor1 = new WPI_TalonSRX(4);
        
        
        driveTraindriveTrainLeftMotor2 = new WPI_TalonSRX(5);
        
        
        driveTraindriveTrainLeftMotor3E = new WPI_TalonSRX(6);
        
        
        driveTraindriveTrainRightEnc = new Encoder(2, 3, false, EncodingType.k4X);
        LiveWindow.addSensor("DriveTrain", "driveTrainRightEnc", driveTraindriveTrainRightEnc);
        driveTraindriveTrainRightEnc.setDistancePerPulse(1.0);
        driveTraindriveTrainRightEnc.setPIDSourceType(PIDSourceType.kRate);
        driveTraindriveTrainLeftEnc = new Encoder(0, 1, false, EncodingType.k4X);
        LiveWindow.addSensor("DriveTrain", "driveTrainLeftEnc", driveTraindriveTrainLeftEnc);
        driveTraindriveTrainLeftEnc.setDistancePerPulse(1.0);
        driveTraindriveTrainLeftEnc.setPIDSourceType(PIDSourceType.kRate);
>>>>>>> c6e618dcf92f2be930c2f981793c959441e3f1e7

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
